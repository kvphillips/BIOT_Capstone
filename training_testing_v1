# use lighttag to produce a .json file (manually annotated files)
# ensure that this .py file is in the same location as your .json file update the name of the .json file in the code
# it will then output a .spacy file in the same directory as the original .json file
# Install the following prompts into the cmd prompt:
#   pip install json
#   pip install spacy

import json
import spacy
from spacy.training.example import Example

# Load the annotated data from the JSON file
with open('training_testing_basic_annotations.json', 'r') as file:
    annotated_data = json.load(file)

# Extract annotated examples
annotated_examples = annotated_data.get('examples', [])

# Use this to convert the .json file to a .spacy training file that can be fed into the NER spacy model
# Create a file for spaCy training data
with open('training_data.spacy', 'w') as spacy_file:
    for example in annotated_examples:
        content = example.get('content', '')
        entities = []

        for annotation in example.get('annotations', []):
            start = annotation.get('start', 0)
            end = annotation.get('end', 0)
            label = annotation.get('tag', '')
            entities.append((start, end, label))

        spacy_file.write(json.dumps({"text": content, "entities": entities}) + '\n')

#load the spacy file

with open('training_data.spacy', 'r', encoding='utf-8') as f:
    data = json.load(f)

# Check if 'text' and 'entities' keys exist in the data dictionary
if 'text' in data and 'entities' in data:
    text = data['text']
    entities = data['entities']
    annotations = []

    for start, end, label in entities:
        annotations.append((start, end, label))

    training_data = [(text, {'entities': annotations})]
else:
    print("Invalid data format in .spacy file")

nlp = spacy.blank("en")
ner = nlp.add_pipe('ner')

nlp.begin_training()

for itn in range(30):
    for text, annotations in training_data:
        example = Example.from_dict(nlp.make_doc(text), annotations)
        nlp.update([example])

# Save the trained model
nlp.to_disk('ner_model')

nlp = spacy.load('ner_model')

text = "In the body, beta-carotene converts into vitamin A (retinol). We need vitamin A for good vision and eye health, for a strong immune system, and for healthy skin and mucous membranes."

doc = nlp(text)

for ent in doc.ents:
    print(ent.text, ent.label_)




